html(lang="en")
    head
        include head
        title Biodivergent Sites and Sounds: map
        style.
            #map{
                width:100%;
                height:100%;
                position:absolute;
                top:0;
                left:0;
                z-index:0;
                bottom:0;
                right:0;
                margin:auto;
            }
             #backdrop {
                background-color:navy;
                transition: filter 1s;
                overflow:hidden;
                touch-action:none;
                user-select:none;
                -webkit-user-select: none; /* Safari */
                background-image:url("element_painting.svg");
                background-size:cover;
                background-repeat:no-repeat;
                background-position:center;
                height:100vh;
                width:100vw;
                //- filter: hue-rotate(180deg);
            }
    script(src="https://cdnjs.cloudflare.com/ajax/libs/dat-gui/0.7.7/dat.gui.min.js")
    
    body 
        main
        #backdrop
        include map/map2.html
    script.
        const markers = {
            elements:{
                circle_0: {
                    cx:    160,
                    cy:    400,
                }, 
                circle_1: {
                    cx:    500,
                    cy:    360,
                }, 
            }
           
        }

        let gui = new dat.GUI();
        console.log(gui)
        let f2 = gui.addFolder('elements');
        let parameters = {
            marker_0_cx:       f2.add(markers.elements.circle_0, 'cx', 0, 1000),
            marker_0_cy:       f2.add(markers.elements.circle_0, 'cy', 0, 1000),
            marker_1_cx:       f2.add(markers.elements.circle_1, 'cx', 0, 1000),
            marker_1_cy:       f2.add(markers.elements.circle_1, 'cy', 0, 1000),
        }
 
        parameters.marker_0_cx.onChange((value)=>{
            document.querySelectorAll('#circle_0,#circle_0_centre,#circle_0_centre2,#circle_0_halo').forEach((circle)=>{
                console.log(circle)
                circle.setAttribute('cx', value);
            })
        })
        parameters.marker_0_cy.onChange((value)=>{
            document.querySelectorAll('#circle_0,#circle_0_centre,#circle_0_centre2,#circle_0_halo').forEach((circle)=>{
                console.log(circle)
                circle.setAttribute('cy', value);
            })
        })
        f2.open();

        window.addEventListener('load',()=>{
            
            touch.setAction('.visual',{
                start:function(element,e,obj){
                    console.log('start')
                    element.style.opacity=0.2;
                },
                enter:function(element,e,obj){
                    console.log('enter')
                    element.style.opacity=0.2;
                },
                move:function(element,e,obj){
                    let {x,y} = obj.relative;
                    let {max_x, max_y} = obj.relative.range;
                    console.log('move', x, y)
                },
                end:function(element,e,obj){
                    console.log('end')
                    element.style.opacity=0.1;
                },
                leave:function(element,e,obj){
                    console.log('leave')
                    element.style.opacity=0.1;
                }
            })

            touch.setAction('.circle_interact',{
                start:function(element,e,obj){
                    let {id} = element;
                    //- let halo = document.querySelector(`.circle_halo[data-id="${id}"]`);
                    
                },
                enter:function(element,e,obj){
                    let {id} = element;
                    //- let halo = document.querySelector(`.circle_halo[data-id="${id}"]`);
                },
                move:function(element,e,obj){
                    let {id} = element;
                    //- let halo = document.querySelector(`.circle_halo[data-id="${id}"]`);
                    let {x,y} = obj.relative;
                    let {max_x, max_y} = obj.relative.range;
                    console.log('move', x, y)
                },
                end:function(element,e,obj){
                    let {id} = element;
                    let halo = document.querySelector(`.circle_halo[data-id="${id}"]`);
                },
                leave:function(element,e,obj){
                    let {id} = element;
                    let halo = document.querySelector(`.circle_halo[data-id="${id}"]`);
                }
            })
        })