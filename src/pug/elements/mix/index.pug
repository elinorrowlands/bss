html(lang="en")
    head
        meta(charset="UTF-8")
        meta(name="viewport", content="width=device-width, initial-scale=1.0")
        title BSS: Elements
        script(src="https://cdnjs.cloudflare.com/ajax/libs/tone/14.7.77/Tone.js")
        link(rel='stylesheet', href='../../style.css')
        link(rel="preconnect" href="https://fonts.googleapis.com")
        link(rel="preconnect" href="https://fonts.gstatic.com" crossorigin)
        link(href="https://fonts.googleapis.com/css2?family=Kanit:wght@100;200&family=Nunito:wght@200&display=swap" rel="stylesheet")
        style.
            button{
                font-size: 2rem;
            }
    body
        main.main__qr
            .bar
                label(for="ch1") 1
                input#ch1.mute(type="checkbox" checked)
                button.button#start Start
                input#ch2.mute(type="checkbox" checked)
                label(for="ch2") 2

    script.
        let mix = {
            channels:[new Tone.Channel(), new Tone.Channel()],
            meters:[new Tone.Meter(), new Tone.Meter()]
        }
        let sounds = [
            new Tone.Player("canal_II_ch_1.mp3"),
            new Tone.Player("canal_II_ch_2.mp3")
        ]
        sounds.forEach((sound,i) => {
            sound.connect(mix.channels[i]);
            sound.connect(mix.meters[i]);
            mix.channels[i].pan.value = 1 - i * 2;
            mix.channels[i].toDestination();
        })
        
        let start = document.querySelector("#start")
        start.addEventListener("click", () => {
            sounds.forEach(sound => {
                sound.start()
            })
        })
        document.querySelectorAll('.mute').forEach((mute,i) => {
            mute.addEventListener("change", () => {
                if(mute.checked){
                    
                    mix.channels[i].volume.rampTo(0, 1)
                }else{
                    
                    mix.channels[i].volume.rampTo(-Infinity, 1)
                }
            })
        })